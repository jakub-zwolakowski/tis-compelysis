[
    {
        "name": "TSnippet sample 1",
        "files": [
            "code-samples/tsnippet-1.c"
        ]
    },
    {
        "name": "demo-caesar/v0 INTERPRETER",
        "machdep": "gcc_x86_64",
        "cpp-extra-args": [
            "-Idemo-caesar/v0"
        ],
        "files": [
            "demo-caesar/v0/caesar.c",
            "demo-caesar/v0/main.c"
        ]
    },
    {
        "name": "demo-caesar/v0 ANALYZER",
        "machdep": "gcc_x86_64",
        "cpp-extra-args": [
            "-Idemo-caesar/v0"
        ],
        "files": [
            "demo-caesar/v0/caesar.c",
            "demo-caesar/v0/main.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 100,
        "val-malloc-returns-null": true
    },
    {
        "name": "demo-caesar/v1 INTERPRETER",
        "machdep": "gcc_x86_64",
        "cpp-extra-args": [
            "-Idemo-caesar/v1"
        ],
        "files": [
            "demo-caesar/v1/caesar.c",
            "demo-caesar/v1/main.c"
        ]
    },
    {
        "name": "demo-caesar/v1 ANALYZER",
        "machdep": "gcc_x86_64",
        "cpp-extra-args": [
            "-Idemo-caesar/v1"
        ],
        "files": [
            "demo-caesar/v1/caesar.c",
            "demo-caesar/v1/main.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 100,
        "val-malloc-returns-null": true
    },
    /*
    {
        "name": "demo-caesar/v2 INTERPRETER",
        "machdep": "gcc_x86_64",
        "cpp-extra-args": [
            "-Idemo-caesar/v2"
        ],
        "files": [
            "demo-caesar/v2/caesar.c",
            "demo-caesar/v2/main.c"
        ]
    },
    */
    {
        "name": "demo-caesar/v2 ANALYZER",
        "machdep": "gcc_x86_64",
        "cpp-extra-args": [
            "-Idemo-caesar/v2"
        ],
        "files": [
            "demo-caesar/v2/caesar.c",
            "demo-caesar/v2/main.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 100,
        "val-malloc-returns-null": true
    },
    /*
    {
        "name": "demo-caesar/v3 INTERPRETER",
        "machdep": "gcc_x86_64",
        "cpp-extra-args": [
            "-Idemo-caesar/v3"
        ],
        "files": [
            "demo-caesar/v3/caesar.c",
            "demo-caesar/v3/main.c"
        ]
    },
    */
    {
        "name": "demo-caesar/v3 ANALYZER",
        "machdep": "gcc_x86_64",
        "cpp-extra-args": [
            "-Idemo-caesar/v3"
        ],
        "files": [
            "demo-caesar/v3/caesar.c",
            "demo-caesar/v3/main.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 100,
        "val-malloc-returns-null": true
    },
    /*
    {
        "name": "demo-caesar/v4 INTERPRETER",
        "machdep": "gcc_x86_64",
        "cpp-extra-args": [
            "-Idemo-caesar/v4"
        ],
        "files": [
            "demo-caesar/v4/caesar.c",
            "demo-caesar/v4/main.c"
        ]
    },
    */
    {
        "name": "demo-caesar/v4 ANALYZER",
        "machdep": "gcc_x86_64",
        "cpp-extra-args": [
            "-Idemo-caesar/v4"
        ],
        "files": [
            "demo-caesar/v4/caesar.c",
            "demo-caesar/v4/main.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 100,
        "val-malloc-returns-null": true
    },
    {
        "name": "Valgrind sample 1",
        "files": [
            "code-samples/valgrind-1.c"
        ]
    },
    {
        "name": "Valgrind sample 2",
        "files": [
            "code-samples/valgrind-2.c"
        ]
    },
    {
        "name": "eheyman",
        "files": [
            "code-samples/eheyman.c"
        ]
    },
    {
        "name": "ARR30-C: Do not form or use out-of-bounds pointers or array subscripts",
        // "name": "ARR30-C/Forming_Out-of-Bounds_Pointer.c",
        "files": [
            "CERT_C/ARR/ARR30-C/Forming_Out-of-Bounds_Pointer.c"
        ]
    },
    {
        "name": "ARR30-C: Do not form or use out-of-bounds pointers or array subscripts",
        // "name": "ARR30-C/Dereferencing_Past-the-End_Pointer.c",
        "files": [
            "CERT_C/ARR/ARR30-C/Dereferencing_Past-the-End_Pointer.c"
        ]
    },
    {
        "name": "ARR30-C: Do not form or use out-of-bounds pointers or array subscripts",
        // "name": "ARR30-C/Using_Past-the-End_Index.c",
        "files": [
            "CERT_C/ARR/ARR30-C/Using_Past-the-End_Index.c"
        ]
    },
    {
        "name": "ARR30-C: Do not form or use out-of-bounds pointers or array subscripts",
        // "name": "ARR30-C/Null_Pointer_Arithmetic.c",
        "files": [
            "CERT_C/ARR/ARR30-C/Null_Pointer_Arithmetic.c"
        ]
    },
    {
        "name": "ARR30-C: Do not form or use out-of-bounds pointers or array subscripts",
        // "name": "ARR30-C/Apparently_Accessible_Out-of-Range_Index.c",
        "files": [
            "CERT_C/ARR/ARR30-C/Apparently_Accessible_Out-of-Range_Index.c"
        ]
    },
    {
        "name": "ARR30-C: Do not form or use out-of-bounds pointers or array subscripts",
        // "name": "ARR30-C/Pointer_Past_Flexible_Array_Member.c",
        "files": [
            "CERT_C/ARR/ARR30-C/Pointer_Past_Flexible_Array_Member.c"
        ]
    },
    {
        "name": "ARR32-C: Ensure size arguments for variable length arrays are in a valid range",
        // "name": "ARR32-C/example1.c",
        "files": [
            "CERT_C/ARR/ARR32-C/example1.c"
        ]
    },
    {
        "name": "ARR36-C: Do not subtract or compare two pointers that do not refer to the same array",
        // "name": "ARR36-C/example.c",
        "files": [
            "CERT_C/ARR/ARR36-C/example.c"
        ]
    },
    {
        "name": "ARR38-C: Guarantee that library functions do not form invalid pointers",
        // "name": "ARR38-C/Element_Count.c",
        "files": [
            "CERT_C/ARR/ARR38-C/Element_Count.c"
        ]
    },
    {
        "name": "ARR39-C: Do not add or subtract a scaled integer to a pointer",
        // "name": "ARR39-C/example1.c",
        "files": [
            "CERT_C/ARR/ARR39-C/example1.c"
        ]
    },
    {
        "name": "ERR33-C: Detect and handle standard library errors",
        // "name": "ERR33-C/example_calloc.c",
        "files": [
            "CERT_C/ERR/ERR33-C/example_calloc.c"
        ],
        "val-profile": "analyzer"
    },
    {
        "name": "ERR34-C: Detect errors when converting a string to a number",
        // "name": "ERR34-C/example_atoi_vs_strtol.c",
        "files": [
            "CERT_C/ERR/ERR34-C/example_atoi_vs_strtol.c"
        ]
    },
    
    {
        "name": "FLP30-C: Do not use floating-point variables as loop counters",
        // "name": "FLP30-C/example1.c",
        "files": [
            "CERT_C/FLP/FLP30-C/example1.c"
        ],
        "val-profile": "analyzer"
    },
    
    {
        "name": "FLP32-C: Prevent or detect domain and range errors in math functions",
        // "name": "FLP32-C/sqrt.c",
        "files": [
            "CERT_C/FLP/FLP32-C/sqrt.c"
        ]
    },
    {
        "name": "FLP34-C: Ensure that floating-point conversions are within range of the new type",
        // "name": "FLP34-C/example_custom.c",
        "files": [
            "CERT_C/FLP/FLP34-C/example_custom.c"
        ]
    },
    {
        "name": "FLP37-C: Do not use object representations to compare floating-point values",
        // "name": "FLP37-C/example.c",
        "files": [
            "CERT_C/FLP/FLP37-C/example.c"
        ]
    },
    {
        "name": "FIO47-C: Use valid format strings",
        // "name": "FIO47-C/example.c",
        "files": [
            "CERT_C/FIO/FIO47-C/example.c"
        ]
    },
    {
        "name": "DCL30-C: Declare objects with appropriate storage durations",
        // "name": "DCL30-C/Storage_Durations.c",
        "files": [
            "CERT_C/DCL/DCL30-C/Storage_Durations.c"
        ]
    },
    {
        "name": "DCL31-C: Declare identifiers before using them",
        // "name": "DCL31-C/Implicit_Return_Type.c",
        "files": [
            "CERT_C/DCL/DCL31-C/Implicit_Return_Type.c"
        ]
    },
    {
        "name": "DCL36-C: Do not declare an identifier with conflicting linkage classifications",
        // "name": "DCL36-C/example.c",
        "files": [
            "CERT_C/DCL/DCL36-C/example.c"
        ]
    },
    {
        "name": "DCL38-C: Use the correct syntax when declaring a flexible array member",
        // "name": "DCL38-C/example.c",
        "files": [
            "CERT_C/DCL/DCL38-C/example.c"
        ]
    },
    {
        "name": "DCL40-C: Do not create incompatible declarations of the same function or object",
        // "name": "DCL40-C/example_main.c",
        "files": [
            "CERT_C/DCL/DCL40-C/example_main.c",
            "CERT_C/DCL/DCL40-C/example_a.c",
            "CERT_C/DCL/DCL40-C/example_b.c"
        ]
    },
    {
        "name": "DCL41-C: Do not declare variables inside a switch statement before the first case label",
        // "name": "DCL41-C/example.c",
        "files": [
            "CERT_C/DCL/DCL41-C/example.c"
        ]
    },
    {
        "name": "MSC33-C: Do not pass invalid data to the asctime() function",
        // "name": "MSC33-C/example.c",
        "files": [
            "CERT_C/MSC/MSC33-C/example.c"
        ]
    },
    {
        "name": "MSC37-C: Ensure that control never reaches the end of a non-void function",
        // "name": "MSC37-C/example1.c",
        "files": [
            "CERT_C/MSC/MSC37-C/example1.c"
        ]
    },
    {
        "name": "MSC39-C: Do not call va_arg() on a va_list that has an indeterminate value",
        // "name": "MSC39-C/example.c",
        "files": [
            "CERT_C/MSC/MSC39-C/example.c"
        ]
    },
    {
        "name": "MSC40-C: Do not violate constraints",
        // "name": "MSC40-C/Inline_Internal_Linkage.c",
        "files": [
            "CERT_C/MSC/MSC40-C/Inline_Internal_Linkage.c"
        ]
    },
    {
        "name": "MEM30-C: Do not access freed memory",
        // "name": "MEM30-C/example1.c",
        "files": [
            "CERT_C/MEM/MEM30-C/example1.c"
        ]
    },
    {
        "name": "MEM31-C: Free dynamically allocated memory when no longer needed",
        // "name": "MEM31-C/example.c",
        "files": [
            "CERT_C/MEM/MEM31-C/example.c"
        ]
    },
    {
        "name": "MEM34-C: Only free memory allocated dynamically",
        // "name": "MEM34-C/example.c",
        "files": [
            "CERT_C/MEM/MEM34-C/example.c"
        ]
    },
    {
        "name": "MEM35-C: Allocate sufficient memory for an object",
        // "name": "MEM35-C/Integer.c",
        "files": [
            "CERT_C/MEM/MEM35-C/Integer.c"
        ],
        "machdep": "gcc_x86_64"
    },
    {
        "name": "EXP30-C: Do not depend on the order of evaluation for side effects",
        // "name": "EXP30-C/example1.c",
        "files": [
            "CERT_C/EXP/EXP30-C/example1.c"
        ]
    },
    {
        "name": "EXP32-C: Do not access a volatile object through a nonvolatile reference",
        // "name": "EXP32-C/example.c",
        "files": [
            "CERT_C/EXP/EXP32-C/example.c"
        ],
        "cpp-extra-args": [
            "-Dvolatile="
        ]
    },
    {
        "name": "EXP33-C: Do not read uninitialized memory",
        // "name": "EXP33-C/Return-by-Reference.c",
        "files": [
            "CERT_C/EXP/EXP33-C/Return-by-Reference.c"
        ]
    },
    {
        "name": "EXP34-C: Do not dereference null pointers",
        // "name": "EXP34-C/custom_example.c",
        "files": [
            "CERT_C/EXP/EXP34-C/custom_example.c"
        ]
    },
    {
        "name": "EXP35-C: Do not modify objects with temporary lifetime",
        // "name": "EXP35-C/example.c",
        "files": [
            "CERT_C/EXP/EXP35-C/example.c"
        ]
    },
    {
        "name": "EXP36-C: Do not cast pointers into more strictly aligned pointer types",
        // "name": "EXP36-C/Intermediate_Object.c",
        "files": [
            "CERT_C/EXP/EXP36-C/Intermediate_Object.c"
        ]
    },
    {
        "name": "EXP37-C: Call functions with the correct number and type of arguments",
        // "name": "EXP37-C/example_strchr.c",
        "files": [
            "CERT_C/EXP/EXP37-C/example_strchr.c"
        ]
    },
    {
        "name": "EXP40-C: Do not modify constant objects",
        // "name": "EXP40-C/example.c",
        "files": [
            "CERT_C/EXP/EXP40-C/example.c"
        ]
    },
    {
        "name": "EXP42-C: Do not compare padding data",
        // "name": "EXP42-C/example.c",
        "files": [
            "CERT_C/EXP/EXP42-C/example.c"
        ]
    },
    {
        "name": "EXP44-C: Do not rely on side effects in operands to sizeof, _Alignof, or _Generic",
        // "name": "EXP44-C/example_sizeof.c",
        "files": [
            "CERT_C/EXP/EXP44-C/example_sizeof.c"
        ]
    },
    {
        "name": "EXP45-C: Do not perform assignments in selection statements",
        // "name": "EXP45-C/Unintentional_Assignment.c",
        "files": [
            "CERT_C/EXP/EXP45-C/Unintentional_Assignment.c"
        ]
    },
    {
        "name": "EXP47-C: Do not call va_arg with an argument of the incorrect type",
        // "name": "EXP47-C/example.c",
        "files": [
            "CERT_C/EXP/EXP47-C/example.c"
        ]
    },
    {
        "name": "INT30-C: Ensure that unsigned integer operations do not wrap",
        // "name": "INT30-C/Addition.c",
        "files": [
            "CERT_C/INT/INT30-C/Addition.c"
        ],
        "warn-unsigned-overflow": true
    },
    {
        "name": "INT31-C: Ensure that integer conversions do not result in lost or misinterpreted data",
        // "name": "INT31-C/Unsigned_to_Signed.c",
        "files": [
            "CERT_C/INT/INT31-C/Unsigned_to_Signed.c"
        ],
        "rte": true,
        "warn-signed-downcast": true
    },
    {
        "name": "INT32-C: Ensure that operations on signed integers do not result in overflow",
        // "name": "INT32-C/Addition.c",
        "files": [
            "CERT_C/INT/INT32-C/Addition.c"
        ]
    },
    {
        "name": "INT33-C: Ensure that division and remainder operations do not result in divide-by-zero errors",
        // "name": "INT33-C/Division.c",
        "files": [
            "CERT_C/INT/INT33-C/Division.c"
        ]
    },
    {
        "name": "INT34-C: Do not shift an expression by a negative number of bits or by greater than or equal to the number of bits that exist in the operand",
        // "name": "INT34-C/Left_Shift_Unsigned_Type.c",
        "files": [
            "CERT_C/INT/INT34-C/Left_Shift_Unsigned_Type.c"
        ]
    },
    {
        "name": "INT35-C: Use correct integer precisions",
        // "name": "INT35-C/example.c",
        "files": [
            "CERT_C/INT/INT35-C/example.c"
        ]
    },
    {
        "name": "INT36-C: Converting a pointer to integer or integer to pointer",
        // "name": "INT36-C/example1.c",
        "files": [
            "CERT_C/INT/INT36-C/example1.c"
        ]
    },
    {
        "name": "STR30-C: Do not attempt to modify string literals",
        // "name": "STR30-C/example1.c",
        "files": [
            "CERT_C/STR/STR30-C/example1.c"
        ]
    },
    {
        "name": "STR31-C: Guarantee that storage for strings has sufficient space for character data and the null terminator",
        // "name": "STR31-C/Off-by-One_Error.c",
        "files": [
            "CERT_C/STR/STR31-C/Off-by-One_Error.c"
        ]
    },
    {
        "name": "STR32-C: Do not pass a non-null-terminated character sequence to a library function that expects a string",
        // "name": "STR32-C/example1.c",
        "files": [
            "CERT_C/STR/STR32-C/example1.c"
        ]
    },
    {
        "name": "STR34-C: Cast characters to unsigned char before converting to larger integer sizes",
        // "name": "STR34-C/example1.c",
        "files": [
            "CERT_C/STR/STR34-C/example1.c"
        ]
    },
    {
        "name": "STR37-C: Arguments to character-handling functions must be representable as an unsigned char",
        // "name": "STR37-C/example.c",
        "files": [
            "CERT_C/STR/STR37-C/example.c"
        ]
    },
    {
        "name": "STR38-C: Do not confuse narrow and wide character strings and functions",
        // "name": "STR38-C/strlen.c",
        "files": [
            "CERT_C/STR/STR38-C/strlen.c"
        ]
    },
    {
        "name": "ARR37-C: Do not add or subtract an integer to a pointer to a non-array object",
        "files": [
            "CERT_C/ARR/ARR37-C/example.c"
        ]
    },
    {
        "name": "ARR37-C (compliant): Do not add or subtract an integer to a pointer to a non-array object",
        "files": [
            "CERT_C/ARR/ARR37-C/example_compliant.c"
        ]
    },
    {
        "name": "ARR37-C (noncompliant): Do not add or subtract an integer to a pointer to a non-array object",
        "files": [
            "CERT_C/ARR/ARR37-C/example_noncompliant.c"
        ]
    },
    {
        "name": "CON31-C: Do not destroy a mutex while it is locked",
        "files": [
            "CERT_C/CON/CON31-C/example.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 1000,
        "mthread": true,
        "mt-write-races": true
    },
    {
        "name": "CON31-C (compliant): Do not destroy a mutex while it is locked",
        "files": [
            "CERT_C/CON/CON31-C/example_compliant.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 1000,
        "mthread": true,
        "mt-write-races": true
    },
    {
        "name": "CON31-C (noncompliant): Do not destroy a mutex while it is locked",
        "files": [
            "CERT_C/CON/CON31-C/example_noncompliant.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 1000,
        "mthread": true,
        "mt-write-races": true
    },
    {
        "name": "CON32-C: Prevent data races when accessing bit-fields from multiple threads",
        "files": [
            "CERT_C/CON/CON32-C/example.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 1000,
        "mthread": true,
        "mt-write-races": true
    },
    {
        "name": "CON32-C (compliant): Prevent data races when accessing bit-fields from multiple threads",
        "files": [
            "CERT_C/CON/CON32-C/example_compliant.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 1000,
        "mthread": true,
        "mt-write-races": true
    },
    {
        "name": "CON32-C (noncompliant): Prevent data races when accessing bit-fields from multiple threads",
        "files": [
            "CERT_C/CON/CON32-C/example_noncompliant.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 1000,
        "mthread": true,
        "mt-write-races": true
    },
    {
        "name": "CON34-C: Declare objects shared between threads with appropriate storage durations",
        "files": [
            "CERT_C/CON/CON34-C/example.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 1000,
        "mthread": true,
        "mt-write-races": true
    },
    {
        "name": "CON34-C (compliant): Declare objects shared between threads with appropriate storage durations",
        "files": [
            "CERT_C/CON/CON34-C/example_compliant.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 1000,
        "mthread": true,
        "mt-write-races": true
    },
    {
        "name": "CON34-C (noncompliant): Declare objects shared between threads with appropriate storage durations",
        "files": [
            "CERT_C/CON/CON34-C/example_noncompliant.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 1000,
        "mthread": true,
        "mt-write-races": true
    },
    {
        "name": "CON37-C: Do not call signal() in a multithreaded program",
        "files": [
            "CERT_C/CON/CON37-C/example.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 1000,
        "mthread": true,
        "mt-write-races": true
    },
    {
        "name": "CON37-C (compliant): Do not call signal() in a multithreaded program",
        "files": [
            "CERT_C/CON/CON37-C/example_compliant.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 1000,
        "mthread": true,
        "mt-write-races": true
    },
    {
        "name": "CON37-C (noncompliant): Do not call signal() in a multithreaded program",
        "files": [
            "CERT_C/CON/CON37-C/example_noncompliant.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 1000,
        "mthread": true,
        "mt-write-races": true
    },
    {
        "name": "CON39-C: Do not join or detach a thread that was previously joined or detached",
        "files": [
            "CERT_C/CON/CON39-C/example.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 1000,
        "mthread": true,
        "mt-write-races": true
    },
    {
        "name": "CON39-C (compliant): Do not join or detach a thread that was previously joined or detached",
        "files": [
            "CERT_C/CON/CON39-C/example_compliant.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 1000,
        "mthread": true,
        "mt-write-races": true
    },
    {
        "name": "CON39-C (noncompliant): Do not join or detach a thread that was previously joined or detached",
        "files": [
            "CERT_C/CON/CON39-C/example_noncompliant.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 1000,
        "mthread": true,
        "mt-write-races": true
    },
    {
        "name": "CON43-C: Do not allow data races in multithreaded code",
        "files": [
            "CERT_C/CON/CON43-C/example.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 1000,
        "mthread": true,
        "mt-write-races": true
    },
    {
        "name": "CON43-C (compliant): Do not allow data races in multithreaded code",
        "files": [
            "CERT_C/CON/CON43-C/example_compliant.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 1000,
        "mthread": true,
        "mt-write-races": true
    },
    {
        "name": "CON43-C (noncompliant): Do not allow data races in multithreaded code",
        "files": [
            "CERT_C/CON/CON43-C/example_noncompliant.c"
        ],
        "val": true,
        "val-profile": "analyzer",
        "slevel": 1000,
        "mthread": true,
        "mt-write-races": true
    },
    {
        "name": "DCL37-C: Do not declare or define a reserved identifier",
        "files": [
            "CERT_C/DCL/DCL37-C/example.c"
        ]
    },
    {
        "name": "DCL37-C (compliant): Do not declare or define a reserved identifier",
        "files": [
            "CERT_C/DCL/DCL37-C/example_compliant.c"
        ]
    },
    {
        "name": "DCL37-C (noncompliant): Do not declare or define a reserved identifier",
        "files": [
            "CERT_C/DCL/DCL37-C/example_noncompliant.c"
        ]
    },
    {
        "name": "ENV30-C: Do not modify the object referenced by the return value of certain functions",
        "files": [
            "CERT_C/ENV/ENV30-C/example.c"
        ]
    },
    {
        "name": "ENV30-C (compliant): Do not modify the object referenced by the return value of certain functions",
        "files": [
            "CERT_C/ENV/ENV30-C/example_compliant.c"
        ]
    },
    {
        "name": "ENV30-C (noncompliant): Do not modify the object referenced by the return value of certain functions",
        "files": [
            "CERT_C/ENV/ENV30-C/example_noncompliant.c"
        ]
    },
    {
        "name": "ENV32-C: All exit handlers must return normally",
        "files": [
            "CERT_C/ENV/ENV32-C/example.c"
        ]
    },
    {
        "name": "ENV32-C (compliant): All exit handlers must return normally",
        "files": [
            "CERT_C/ENV/ENV32-C/example_compliant.c"
        ]
    },
    {
        "name": "ENV32-C (noncompliant): All exit handlers must return normally",
        "files": [
            "CERT_C/ENV/ENV32-C/example_noncompliant.c"
        ]
    },
    {
        "name": "EXP39-C: Do not access a variable through a pointer of an incompatible type",
        "files": [
            "CERT_C/EXP/EXP39-C/example.c"
        ]
    },
    {
        "name": "EXP39-C (compliant): Do not access a variable through a pointer of an incompatible type",
        "files": [
            "CERT_C/EXP/EXP39-C/example_compliant.c"
        ]
    },
    {
        "name": "EXP39-C (noncompliant): Do not access a variable through a pointer of an incompatible type",
        "files": [
            "CERT_C/EXP/EXP39-C/example_noncompliant.c"
        ]
    },
    {
        "name": "EXP43-C: Avoid undefined behavior when using restrict-qualified pointers",
        "files": [
            "CERT_C/EXP/EXP43-C/example.c"
        ]
    },
    {
        "name": "EXP43-C (compliant): Avoid undefined behavior when using restrict-qualified pointers",
        "files": [
            "CERT_C/EXP/EXP43-C/example_compliant.c"
        ]
    },
    {
        "name": "EXP43-C (noncompliant): Avoid undefined behavior when using restrict-qualified pointers",
        "files": [
            "CERT_C/EXP/EXP43-C/example_noncompliant.c"
        ]
    },
    {
        "name": "FIO37-C: Do not assume that fgets() or fgetws() returns a nonempty string when successful",
        "files": [
            "CERT_C/FIO/FIO37-C/example.c"
        ]
    },
    {
        "name": "FIO37-C (compliant): Do not assume that fgets() or fgetws() returns a nonempty string when successful",
        "files": [
            "CERT_C/FIO/FIO37-C/example_compliant.c"
        ]
    },
    {
        "name": "FIO37-C (noncompliant): Do not assume that fgets() or fgetws() returns a nonempty string when successful",
        "files": [
            "CERT_C/FIO/FIO37-C/example_noncompliant.c"
        ]
    },
    {
        "name": "FIO38-C: Do not copy a FILE object",
        "files": [
            "CERT_C/FIO/FIO38-C/example.c"
        ]
    },
    {
        "name": "FIO38-C (compliant): Do not copy a FILE object",
        "files": [
            "CERT_C/FIO/FIO38-C/example_compliant.c"
        ]
    },
    {
        "name": "FIO38-C (noncompliant): Do not copy a FILE object",
        "files": [
            "CERT_C/FIO/FIO38-C/example_noncompliant.c"
        ]
    },
    {
        "name": "FIO39-C: Do not alternately input and output from a stream without an intervening flush or positioning call",
        "files": [
            "CERT_C/FIO/FIO39-C/example.c"
        ],
        "filesystem": {
            "files": [
                {
                    "name": "CERT_C/FIO/FIO39-C/example_file",
                    "from": "CERT_C/FIO/FIO39-C/example_file"
                }
            ]
        }
    },
    {
        "name": "FIO39-C (compliant): Do not alternately input and output from a stream without an intervening flush or positioning call",
        "files": [
            "CERT_C/FIO/FIO39-C/example_compliant.c"
        ],
        "filesystem": {
            "files": [
                {
                    "name": "CERT_C/FIO/FIO39-C/example_file",
                    "from": "CERT_C/FIO/FIO39-C/example_file"
                }
            ]
        }
    },
    {
        "name": "FIO39-C (noncompliant): Do not alternately input and output from a stream without an intervening flush or positioning call",
        "files": [
            "CERT_C/FIO/FIO39-C/example_noncompliant.c"
        ],
        "filesystem": {
            "files": [
                {
                    "name": "CERT_C/FIO/FIO39-C/example_file",
                    "from": "CERT_C/FIO/FIO39-C/example_file"
                }
            ]
        }
    },
    {
        "name": "FIO40-C: Reset strings on fgets()  or fgetws() failure",
        "files": [
            "CERT_C/FIO/FIO40-C/example.c"
        ]
    },
    {
        "name": "FIO40-C (compliant): Reset strings on fgets()  or fgetws() failure",
        "files": [
            "CERT_C/FIO/FIO40-C/example_compliant.c"
        ]
    },
    {
        "name": "FIO40-C (noncompliant): Reset strings on fgets()  or fgetws() failure",
        "files": [
            "CERT_C/FIO/FIO40-C/example_noncompliant.c"
        ]
    },
    {
        "name": "FIO46-C: Do not access a closed file",
        "files": [
            "CERT_C/FIO/FIO46-C/example.c"
        ]
    },
    {
        "name": "FIO46-C (compliant): Do not access a closed file",
        "files": [
            "CERT_C/FIO/FIO46-C/example_compliant.c"
        ]
    },
    {
        "name": "FIO46-C (noncompliant): Do not access a closed file",
        "files": [
            "CERT_C/FIO/FIO46-C/example_noncompliant.c"
        ]
    },
    {
        "name": "FLP36-C: Preserve precision when converting integral values to floating-point type",
        "files": [
            "CERT_C/FLP/FLP36-C/example.c"
        ]
    },
    {
        "name": "FLP36-C (compliant): Preserve precision when converting integral values to floating-point type",
        "files": [
            "CERT_C/FLP/FLP36-C/example_compliant.c"
        ]
    },
    {
        "name": "FLP36-C (noncompliant): Preserve precision when converting integral values to floating-point type",
        "files": [
            "CERT_C/FLP/FLP36-C/example_noncompliant.c"
        ]
    },
    {
        "name": "MEM33-C: Allocate and copy structures containing a flexible array member dynamically",
        "files": [
            "CERT_C/MEM/MEM33-C/example.c"
        ]
    },
    {
        "name": "MEM33-C (compliant): Allocate and copy structures containing a flexible array member dynamically",
        "files": [
            "CERT_C/MEM/MEM33-C/example_compliant.c"
        ]
    },
    {
        "name": "MEM33-C (noncompliant): Allocate and copy structures containing a flexible array member dynamically",
        "files": [
            "CERT_C/MEM/MEM33-C/example_noncompliant.c"
        ]
    },
    {
        "name": "MSC38-C: Do not treat a predefined identifier as an object if it might only be implemented as a macro",
        "files": [
            "CERT_C/MSC/MSC38-C/example.c"
        ]
    },
    {
        "name": "MSC38-C (compliant): Do not treat a predefined identifier as an object if it might only be implemented as a macro",
        "files": [
            "CERT_C/MSC/MSC38-C/example_compliant.c"
        ]
    },
    {
        "name": "MSC38-C (noncompliant): Do not treat a predefined identifier as an object if it might only be implemented as a macro",
        "files": [
            "CERT_C/MSC/MSC38-C/example_noncompliant.c"
        ]
    },
    {
        "name": "PRE30-C: Do not create a universal character name through concatenation",
        "files": [
            "CERT_C/PRE/PRE30-C/example.c"
        ]
    },
    {
        "name": "PRE30-C (compliant): Do not create a universal character name through concatenation",
        "files": [
            "CERT_C/PRE/PRE30-C/example_compliant.c"
        ]
    },
    {
        "name": "PRE30-C (noncompliant): Do not create a universal character name through concatenation",
        "files": [
            "CERT_C/PRE/PRE30-C/example_noncompliant.c"
        ]
    },
    {
        "name": "PRE32-C: Do not use preprocessor directives in invocations of function-like macros",
        "files": [
            "CERT_C/PRE/PRE32-C/example.c"
        ]
    },
    {
        "name": "PRE32-C (compliant): Do not use preprocessor directives in invocations of function-like macros",
        "files": [
            "CERT_C/PRE/PRE32-C/example_compliant.c"
        ]
    },
    {
        "name": "PRE32-C (noncompliant): Do not use preprocessor directives in invocations of function-like macros",
        "files": [
            "CERT_C/PRE/PRE32-C/example_noncompliant.c"
        ]
    }
]